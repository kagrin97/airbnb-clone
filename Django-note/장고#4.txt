장고 #4 rooms

0. 니꼬의 꿀팁 import 할떄의 순서

0. 파이썬 import
1. 장고가 만든것을 import
2. 외부패키지 import
3. 내가만든 어플을 import (core같은것)

1. 어디서든 쓰이는 TimeStamp 만들기

django-admin startapp core
= 코어 라는 어디서든 쓰이는 어플을 만들기

class Meta:
        abstract = True
= abstract는 추상모델이라는 뜻으로 데이터 베이스에 저장이 되지 않게한다
(user app은 추상모델을 쓰지 않는다 왜냐하면 저장되야 하기때문이다)

created = models.DateTimeField(auto_now_add=True)
updated = models.DateTimeField(auto_now=True)
=auto_now_add=True는 내가 모델을 생성할때 날짜를 구해준다,
auto_now=True은 저장할떄 마다 날짜를 저장해 준다

2. django-countries 사용법

pip install django-countries 
= django-countries는 외부 패키지로 많은 나라들을 추가해준다
from django_countries.fields import CountryField
country = CountryField()
=적용법

3. rooms 와 users를 연결해주기  일대 : 다수

from users import models as user_models
host = models.ForeignKey(user_models.User, on_delete=models.CASCADE)
= 위방식은 ForeignKey방식으로 연결시켜준다 일대다 로 연결이 될수있다 일(user), 다(rooms)
= on_delete은 만약 user가 삭제되면 CASCADE(폭포) 즉 밑에있는 rooms, roomtype 등등 다 삭제된다
 
def __str__(self):
        return self.name
= 먼지 이해가 잘안뎀

4. 다수 대 다수 ManyToManyField

room_type = models.ManyToManyField(RoomType, blank=True)

5. 추가 방법

@admin.register(models.RoomType, models.Facility, models.HouseRule, models.Amenity)
와 같이 해줘야 어드민 패널에 추가가 된다(클래스로 여러개를 추가할수 있음)
= 다수대 다수로 설정이 가능 아직 완전히 이해는 몬함

6. 장고에서 추가로 달아주는 문자열 바꾸기   Meta  class

class Meta:
        verbose_name = "Room Type"
= Room Type그대로에 s만 붙여주기

class Meta:
        verbose_name_plural = "Amenities"
= Amenities 로 바꿔주기

ordering = ["created"]
= 문자들의 순서들을 생성된 날짜대로 바꿔주기

7. 정의 되지 않은 class를 사용하기

room =  models.ForeignKey("Room", on_delete=models.CASCADE)
= "Room"처럼 문자열로 감싸주면 나중에 생성되는 class도 사용가능